# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/form_fwk/form_fwk.gni")

module_output_path = "form_fwk/form_fwk/form_mgr_service"

ohos_unittest("FmsObserverRecordTest") {
  module_out_path = module_output_path

  sources = [
    "${form_fwk_path}/services/src/form_observer/form_observer_record.cpp",
    "${form_fwk_path}/services/src/form_observer/form_observer_task_mgr.cpp",
    "${form_fwk_path}/services/src/form_mgr/form_mgr_queue.cpp",
    "${form_fwk_path}/test/mock/src/mock_form_provider_client.cpp",
    "fms_observer_record_test.cpp",
  ]

  include_dirs = [
    "${form_fwk_path}/interfaces/inner_api/include",
    "${form_fwk_path}/services/include",
  ]
  cflags = []
  configs = [ "${form_fwk_path}/test:formmgr_test_config" ]
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [
    "${form_fwk_path}:fms_target",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_deps_wrapper",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_manager",
    "ability_runtime:appkit_native",
    "ability_runtime:mission_info",
    "ability_runtime:wantagent_innerkits",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_core",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "eventhandler:libeventhandler",
    "faultloggerd:libbacktrace_local",
    "faultloggerd:libdfx_dumpcatcher",
    "ffrt:libffrt",
    "form_fwk:form_manager",
    "googletest:gtest_main",
    "googletest:gmock_main",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "libxml2:libxml2",
    "netmanager_base:net_conn_manager_if",
    "os_account:os_account_innerkits",
    "relational_store:native_rdb",
    "resource_management:global_resmgr",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "time_service:time_client",
    "googletest:gmock_main",
  ]
}

group("unittest") {
  testonly = true

  deps = [ ":FmsObserverRecordTest" ]
}
