# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")
import("//foundation/ability/form_fwk/form_fwk.gni")

module_output_path = "form_fwk/formmgrservice"

ohos_unittest("FmsFormMgrMessageEventTest") {
  module_out_path = module_output_path

  sources = [
    "${form_fwk_path}/test/mock/src/mock_bundle_manager.cpp",
    "${form_fwk_path}/test/mock/src/mock_form_host_client.cpp",
    "${form_fwk_path}/test/mock/src/mock_form_provider_client.cpp",
  ]
  sources += [ "fms_form_mgr_message_event_test.cpp" ]

  include_dirs = [
    "//base/notification/eventhandler/interfaces/inner_api",
    "//third_party/zlib/contrib/minizip",
    "//third_party/zlib",
    "${ability_runtime_path}/services/formmgr/include",
    "${bundlefwk_inner_api_path}/appexecfwk_base/include",
    "${bundlefwk_path}/services/bundlemgr/include",
    "${distributeddatamgr_path}/distributeddatamgr/interfaces/innerkits/distributeddata/include",
    "${distributedschedule_path}/samgr/adapter/interfaces/innerkits/include",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy/include",
    "${form_fwk_path}/interfaces/inner_api/include",
  ]

  configs = [
    "${form_fwk_path}/test:formmgr_test_config",
    "${ability_runtime_path}/services/abilitymgr:abilityms_config",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [
    "${ability_runtime_path}/interfaces/inner_api/app_manager:app_manager",
    "${ability_runtime_path}/services/abilitymgr:abilityms_target",
    "${bundlefwk_inner_api_path}/appexecfwk_base:appexecfwk_base",
    "${distributedschedule_path}/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "${form_fwk_path}:fms_target",
    "${form_fwk_path}:fmskit_native",
    "//base/notification/eventhandler/frameworks/eventhandler:libeventhandler",
    "//third_party/googletest:gmock_main",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "appspawn:appspawn_socket_client",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "form_fwk:form_manager",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]

  if (ability_runtime_power) {
    defines = [ "SUPPORT_POWER" ]
    external_deps += [ "power_manager_native:powermgr_client" ]
  }
}

group("unittest") {
  testonly = true
  deps = [ ":FmsFormMgrMessageEventTest" ]
}
